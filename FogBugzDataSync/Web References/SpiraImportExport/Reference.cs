//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1008.
// 
#pragma warning disable 1591

namespace Inflectra.SpiraTest.PlugIns.FogBugzDataSync.SpiraImportExport {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ImportExportSoap", Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteArtifact))]
    public partial class ImportExport : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Project_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveResolutionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_AddResolutionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_RetrieveNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveFieldValueMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveCustomPropertyMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveProjectMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveUserMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_AddUserMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveArtifactMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_AddArtifactMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RemoveArtifactMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomProperty_RetrieveProjectPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback System_GetServerDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback System_GetWebServerUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback System_GetProductNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Connection_AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Connection_DisconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback Connection_ConnectToProjectOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ImportExport() {
            this.Url = "http://localhost/SpiraTest/Services/v2_2/ImportExport.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Project_RetrieveCompletedEventHandler Project_RetrieveCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveNewCompletedEventHandler Incident_RetrieveNewCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveResolutionsCompletedEventHandler Incident_RetrieveResolutionsCompleted;
        
        /// <remarks/>
        public event Incident_AddResolutionsCompletedEventHandler Incident_AddResolutionsCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveByIdCompletedEventHandler Incident_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event Incident_UpdateCompletedEventHandler Incident_UpdateCompleted;
        
        /// <remarks/>
        public event Incident_CreateCompletedEventHandler Incident_CreateCompleted;
        
        /// <remarks/>
        public event Release_RetrieveCompletedEventHandler Release_RetrieveCompleted;
        
        /// <remarks/>
        public event Release_RetrieveByIdCompletedEventHandler Release_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event Release_UpdateCompletedEventHandler Release_UpdateCompleted;
        
        /// <remarks/>
        public event Release_CreateCompletedEventHandler Release_CreateCompleted;
        
        /// <remarks/>
        public event Task_RetrieveNewCompletedEventHandler Task_RetrieveNewCompleted;
        
        /// <remarks/>
        public event Task_RetrieveByIdCompletedEventHandler Task_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event Task_UpdateCompletedEventHandler Task_UpdateCompleted;
        
        /// <remarks/>
        public event Task_CreateCompletedEventHandler Task_CreateCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveFieldValueMappingsCompletedEventHandler DataMapping_RetrieveFieldValueMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveCustomPropertyMappingCompletedEventHandler DataMapping_RetrieveCustomPropertyMappingCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventHandler DataMapping_RetrieveCustomPropertyValueMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveProjectMappingsCompletedEventHandler DataMapping_RetrieveProjectMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveUserMappingsCompletedEventHandler DataMapping_RetrieveUserMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_AddUserMappingsCompletedEventHandler DataMapping_AddUserMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveArtifactMappingsCompletedEventHandler DataMapping_RetrieveArtifactMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_AddArtifactMappingsCompletedEventHandler DataMapping_AddArtifactMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RemoveArtifactMappingsCompletedEventHandler DataMapping_RemoveArtifactMappingsCompleted;
        
        /// <remarks/>
        public event CustomProperty_RetrieveProjectPropertiesCompletedEventHandler CustomProperty_RetrieveProjectPropertiesCompleted;
        
        /// <remarks/>
        public event System_GetServerDateTimeCompletedEventHandler System_GetServerDateTimeCompleted;
        
        /// <remarks/>
        public event System_GetWebServerUrlCompletedEventHandler System_GetWebServerUrlCompleted;
        
        /// <remarks/>
        public event System_GetProductNameCompletedEventHandler System_GetProductNameCompleted;
        
        /// <remarks/>
        public event Connection_AuthenticateCompletedEventHandler Connection_AuthenticateCompleted;
        
        /// <remarks/>
        public event Connection_DisconnectCompletedEventHandler Connection_DisconnectCompleted;
        
        /// <remarks/>
        public event Connection_ConnectToProjectCompletedEventHandler Connection_ConnectToProjectCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Project_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteProject[] Project_Retrieve() {
            object[] results = this.Invoke("Project_Retrieve", new object[0]);
            return ((RemoteProject[])(results[0]));
        }
        
        /// <remarks/>
        public void Project_RetrieveAsync() {
            this.Project_RetrieveAsync(null);
        }
        
        /// <remarks/>
        public void Project_RetrieveAsync(object userState) {
            if ((this.Project_RetrieveOperationCompleted == null)) {
                this.Project_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProject_RetrieveOperationCompleted);
            }
            this.InvokeAsync("Project_Retrieve", new object[0], this.Project_RetrieveOperationCompleted, userState);
        }
        
        private void OnProject_RetrieveOperationCompleted(object arg) {
            if ((this.Project_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Project_RetrieveCompleted(this, new Project_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveNew", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncident[] Incident_RetrieveNew(System.DateTime creationDate) {
            object[] results = this.Invoke("Incident_RetrieveNew", new object[] {
                        creationDate});
            return ((RemoteIncident[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveNewAsync(System.DateTime creationDate) {
            this.Incident_RetrieveNewAsync(creationDate, null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveNewAsync(System.DateTime creationDate, object userState) {
            if ((this.Incident_RetrieveNewOperationCompleted == null)) {
                this.Incident_RetrieveNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveNewOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveNew", new object[] {
                        creationDate}, this.Incident_RetrieveNewOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveNewOperationCompleted(object arg) {
            if ((this.Incident_RetrieveNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveNewCompleted(this, new Incident_RetrieveNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveResolutions", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentResolution[] Incident_RetrieveResolutions(int incidentId) {
            object[] results = this.Invoke("Incident_RetrieveResolutions", new object[] {
                        incidentId});
            return ((RemoteIncidentResolution[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveResolutionsAsync(int incidentId) {
            this.Incident_RetrieveResolutionsAsync(incidentId, null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveResolutionsAsync(int incidentId, object userState) {
            if ((this.Incident_RetrieveResolutionsOperationCompleted == null)) {
                this.Incident_RetrieveResolutionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveResolutionsOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveResolutions", new object[] {
                        incidentId}, this.Incident_RetrieveResolutionsOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveResolutionsOperationCompleted(object arg) {
            if ((this.Incident_RetrieveResolutionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveResolutionsCompleted(this, new Incident_RetrieveResolutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_AddResolutions", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentResolution[] Incident_AddResolutions(RemoteIncidentResolution[] remoteIncidentResolutions) {
            object[] results = this.Invoke("Incident_AddResolutions", new object[] {
                        remoteIncidentResolutions});
            return ((RemoteIncidentResolution[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_AddResolutionsAsync(RemoteIncidentResolution[] remoteIncidentResolutions) {
            this.Incident_AddResolutionsAsync(remoteIncidentResolutions, null);
        }
        
        /// <remarks/>
        public void Incident_AddResolutionsAsync(RemoteIncidentResolution[] remoteIncidentResolutions, object userState) {
            if ((this.Incident_AddResolutionsOperationCompleted == null)) {
                this.Incident_AddResolutionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_AddResolutionsOperationCompleted);
            }
            this.InvokeAsync("Incident_AddResolutions", new object[] {
                        remoteIncidentResolutions}, this.Incident_AddResolutionsOperationCompleted, userState);
        }
        
        private void OnIncident_AddResolutionsOperationCompleted(object arg) {
            if ((this.Incident_AddResolutionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_AddResolutionsCompleted(this, new Incident_AddResolutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncident Incident_RetrieveById(int incidentId) {
            object[] results = this.Invoke("Incident_RetrieveById", new object[] {
                        incidentId});
            return ((RemoteIncident)(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveByIdAsync(int incidentId) {
            this.Incident_RetrieveByIdAsync(incidentId, null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveByIdAsync(int incidentId, object userState) {
            if ((this.Incident_RetrieveByIdOperationCompleted == null)) {
                this.Incident_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveById", new object[] {
                        incidentId}, this.Incident_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveByIdOperationCompleted(object arg) {
            if ((this.Incident_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveByIdCompleted(this, new Incident_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_Update", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Incident_Update(RemoteIncident remoteIncident) {
            this.Invoke("Incident_Update", new object[] {
                        remoteIncident});
        }
        
        /// <remarks/>
        public void Incident_UpdateAsync(RemoteIncident remoteIncident) {
            this.Incident_UpdateAsync(remoteIncident, null);
        }
        
        /// <remarks/>
        public void Incident_UpdateAsync(RemoteIncident remoteIncident, object userState) {
            if ((this.Incident_UpdateOperationCompleted == null)) {
                this.Incident_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_UpdateOperationCompleted);
            }
            this.InvokeAsync("Incident_Update", new object[] {
                        remoteIncident}, this.Incident_UpdateOperationCompleted, userState);
        }
        
        private void OnIncident_UpdateOperationCompleted(object arg) {
            if ((this.Incident_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncident Incident_Create(RemoteIncident remoteIncident) {
            object[] results = this.Invoke("Incident_Create", new object[] {
                        remoteIncident});
            return ((RemoteIncident)(results[0]));
        }
        
        /// <remarks/>
        public void Incident_CreateAsync(RemoteIncident remoteIncident) {
            this.Incident_CreateAsync(remoteIncident, null);
        }
        
        /// <remarks/>
        public void Incident_CreateAsync(RemoteIncident remoteIncident, object userState) {
            if ((this.Incident_CreateOperationCompleted == null)) {
                this.Incident_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_CreateOperationCompleted);
            }
            this.InvokeAsync("Incident_Create", new object[] {
                        remoteIncident}, this.Incident_CreateOperationCompleted, userState);
        }
        
        private void OnIncident_CreateOperationCompleted(object arg) {
            if ((this.Incident_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_CreateCompleted(this, new Incident_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRelease[] Release_Retrieve(bool activeOnly) {
            object[] results = this.Invoke("Release_Retrieve", new object[] {
                        activeOnly});
            return ((RemoteRelease[])(results[0]));
        }
        
        /// <remarks/>
        public void Release_RetrieveAsync(bool activeOnly) {
            this.Release_RetrieveAsync(activeOnly, null);
        }
        
        /// <remarks/>
        public void Release_RetrieveAsync(bool activeOnly, object userState) {
            if ((this.Release_RetrieveOperationCompleted == null)) {
                this.Release_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_RetrieveOperationCompleted);
            }
            this.InvokeAsync("Release_Retrieve", new object[] {
                        activeOnly}, this.Release_RetrieveOperationCompleted, userState);
        }
        
        private void OnRelease_RetrieveOperationCompleted(object arg) {
            if ((this.Release_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_RetrieveCompleted(this, new Release_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRelease Release_RetrieveById(int releaseId) {
            object[] results = this.Invoke("Release_RetrieveById", new object[] {
                        releaseId});
            return ((RemoteRelease)(results[0]));
        }
        
        /// <remarks/>
        public void Release_RetrieveByIdAsync(int releaseId) {
            this.Release_RetrieveByIdAsync(releaseId, null);
        }
        
        /// <remarks/>
        public void Release_RetrieveByIdAsync(int releaseId, object userState) {
            if ((this.Release_RetrieveByIdOperationCompleted == null)) {
                this.Release_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("Release_RetrieveById", new object[] {
                        releaseId}, this.Release_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnRelease_RetrieveByIdOperationCompleted(object arg) {
            if ((this.Release_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_RetrieveByIdCompleted(this, new Release_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_Update", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Release_Update(RemoteRelease remoteRelease) {
            this.Invoke("Release_Update", new object[] {
                        remoteRelease});
        }
        
        /// <remarks/>
        public void Release_UpdateAsync(RemoteRelease remoteRelease) {
            this.Release_UpdateAsync(remoteRelease, null);
        }
        
        /// <remarks/>
        public void Release_UpdateAsync(RemoteRelease remoteRelease, object userState) {
            if ((this.Release_UpdateOperationCompleted == null)) {
                this.Release_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_UpdateOperationCompleted);
            }
            this.InvokeAsync("Release_Update", new object[] {
                        remoteRelease}, this.Release_UpdateOperationCompleted, userState);
        }
        
        private void OnRelease_UpdateOperationCompleted(object arg) {
            if ((this.Release_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRelease Release_Create(RemoteRelease remoteRelease, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> parentReleaseId) {
            object[] results = this.Invoke("Release_Create", new object[] {
                        remoteRelease,
                        parentReleaseId});
            return ((RemoteRelease)(results[0]));
        }
        
        /// <remarks/>
        public void Release_CreateAsync(RemoteRelease remoteRelease, System.Nullable<int> parentReleaseId) {
            this.Release_CreateAsync(remoteRelease, parentReleaseId, null);
        }
        
        /// <remarks/>
        public void Release_CreateAsync(RemoteRelease remoteRelease, System.Nullable<int> parentReleaseId, object userState) {
            if ((this.Release_CreateOperationCompleted == null)) {
                this.Release_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_CreateOperationCompleted);
            }
            this.InvokeAsync("Release_Create", new object[] {
                        remoteRelease,
                        parentReleaseId}, this.Release_CreateOperationCompleted, userState);
        }
        
        private void OnRelease_CreateOperationCompleted(object arg) {
            if ((this.Release_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_CreateCompleted(this, new Release_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_RetrieveNew", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTask[] Task_RetrieveNew(System.DateTime creationDate) {
            object[] results = this.Invoke("Task_RetrieveNew", new object[] {
                        creationDate});
            return ((RemoteTask[])(results[0]));
        }
        
        /// <remarks/>
        public void Task_RetrieveNewAsync(System.DateTime creationDate) {
            this.Task_RetrieveNewAsync(creationDate, null);
        }
        
        /// <remarks/>
        public void Task_RetrieveNewAsync(System.DateTime creationDate, object userState) {
            if ((this.Task_RetrieveNewOperationCompleted == null)) {
                this.Task_RetrieveNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_RetrieveNewOperationCompleted);
            }
            this.InvokeAsync("Task_RetrieveNew", new object[] {
                        creationDate}, this.Task_RetrieveNewOperationCompleted, userState);
        }
        
        private void OnTask_RetrieveNewOperationCompleted(object arg) {
            if ((this.Task_RetrieveNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_RetrieveNewCompleted(this, new Task_RetrieveNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTask Task_RetrieveById(int taskId) {
            object[] results = this.Invoke("Task_RetrieveById", new object[] {
                        taskId});
            return ((RemoteTask)(results[0]));
        }
        
        /// <remarks/>
        public void Task_RetrieveByIdAsync(int taskId) {
            this.Task_RetrieveByIdAsync(taskId, null);
        }
        
        /// <remarks/>
        public void Task_RetrieveByIdAsync(int taskId, object userState) {
            if ((this.Task_RetrieveByIdOperationCompleted == null)) {
                this.Task_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("Task_RetrieveById", new object[] {
                        taskId}, this.Task_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnTask_RetrieveByIdOperationCompleted(object arg) {
            if ((this.Task_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_RetrieveByIdCompleted(this, new Task_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_Update", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Task_Update(RemoteTask remoteTask) {
            this.Invoke("Task_Update", new object[] {
                        remoteTask});
        }
        
        /// <remarks/>
        public void Task_UpdateAsync(RemoteTask remoteTask) {
            this.Task_UpdateAsync(remoteTask, null);
        }
        
        /// <remarks/>
        public void Task_UpdateAsync(RemoteTask remoteTask, object userState) {
            if ((this.Task_UpdateOperationCompleted == null)) {
                this.Task_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_UpdateOperationCompleted);
            }
            this.InvokeAsync("Task_Update", new object[] {
                        remoteTask}, this.Task_UpdateOperationCompleted, userState);
        }
        
        private void OnTask_UpdateOperationCompleted(object arg) {
            if ((this.Task_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTask Task_Create(RemoteTask remoteTask) {
            object[] results = this.Invoke("Task_Create", new object[] {
                        remoteTask});
            return ((RemoteTask)(results[0]));
        }
        
        /// <remarks/>
        public void Task_CreateAsync(RemoteTask remoteTask) {
            this.Task_CreateAsync(remoteTask, null);
        }
        
        /// <remarks/>
        public void Task_CreateAsync(RemoteTask remoteTask, object userState) {
            if ((this.Task_CreateOperationCompleted == null)) {
                this.Task_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_CreateOperationCompleted);
            }
            this.InvokeAsync("Task_Create", new object[] {
                        remoteTask}, this.Task_CreateOperationCompleted, userState);
        }
        
        private void OnTask_CreateOperationCompleted(object arg) {
            if ((this.Task_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_CreateCompleted(this, new Task_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveFieldValueMa" +
            "ppings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveFieldValueMappings(int dataSyncSystemId, int artifactFieldId) {
            object[] results = this.Invoke("DataMapping_RetrieveFieldValueMappings", new object[] {
                        dataSyncSystemId,
                        artifactFieldId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveFieldValueMappingsAsync(int dataSyncSystemId, int artifactFieldId) {
            this.DataMapping_RetrieveFieldValueMappingsAsync(dataSyncSystemId, artifactFieldId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveFieldValueMappingsAsync(int dataSyncSystemId, int artifactFieldId, object userState) {
            if ((this.DataMapping_RetrieveFieldValueMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveFieldValueMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveFieldValueMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveFieldValueMappings", new object[] {
                        dataSyncSystemId,
                        artifactFieldId}, this.DataMapping_RetrieveFieldValueMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveFieldValueMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveFieldValueMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveFieldValueMappingsCompleted(this, new DataMapping_RetrieveFieldValueMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveCustomProper" +
            "tyMapping", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping DataMapping_RetrieveCustomPropertyMapping(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            object[] results = this.Invoke("DataMapping_RetrieveCustomPropertyMapping", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        customPropertyId});
            return ((RemoteDataMapping)(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveCustomPropertyMappingAsync(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            this.DataMapping_RetrieveCustomPropertyMappingAsync(dataSyncSystemId, artifactTypeId, customPropertyId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveCustomPropertyMappingAsync(int dataSyncSystemId, int artifactTypeId, int customPropertyId, object userState) {
            if ((this.DataMapping_RetrieveCustomPropertyMappingOperationCompleted == null)) {
                this.DataMapping_RetrieveCustomPropertyMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveCustomPropertyMappingOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveCustomPropertyMapping", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        customPropertyId}, this.DataMapping_RetrieveCustomPropertyMappingOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveCustomPropertyMappingOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveCustomPropertyMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveCustomPropertyMappingCompleted(this, new DataMapping_RetrieveCustomPropertyMappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveCustomProper" +
            "tyValueMappings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveCustomPropertyValueMappings(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            object[] results = this.Invoke("DataMapping_RetrieveCustomPropertyValueMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        customPropertyId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveCustomPropertyValueMappingsAsync(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            this.DataMapping_RetrieveCustomPropertyValueMappingsAsync(dataSyncSystemId, artifactTypeId, customPropertyId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveCustomPropertyValueMappingsAsync(int dataSyncSystemId, int artifactTypeId, int customPropertyId, object userState) {
            if ((this.DataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveCustomPropertyValueMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        customPropertyId}, this.DataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveCustomPropertyValueMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveCustomPropertyValueMappingsCompleted(this, new DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveProjectMappi" +
            "ngs", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveProjectMappings(int dataSyncSystemId) {
            object[] results = this.Invoke("DataMapping_RetrieveProjectMappings", new object[] {
                        dataSyncSystemId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveProjectMappingsAsync(int dataSyncSystemId) {
            this.DataMapping_RetrieveProjectMappingsAsync(dataSyncSystemId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveProjectMappingsAsync(int dataSyncSystemId, object userState) {
            if ((this.DataMapping_RetrieveProjectMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveProjectMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveProjectMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveProjectMappings", new object[] {
                        dataSyncSystemId}, this.DataMapping_RetrieveProjectMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveProjectMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveProjectMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveProjectMappingsCompleted(this, new DataMapping_RetrieveProjectMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveUserMappings" +
            "", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveUserMappings(int dataSyncSystemId) {
            object[] results = this.Invoke("DataMapping_RetrieveUserMappings", new object[] {
                        dataSyncSystemId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveUserMappingsAsync(int dataSyncSystemId) {
            this.DataMapping_RetrieveUserMappingsAsync(dataSyncSystemId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveUserMappingsAsync(int dataSyncSystemId, object userState) {
            if ((this.DataMapping_RetrieveUserMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveUserMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveUserMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveUserMappings", new object[] {
                        dataSyncSystemId}, this.DataMapping_RetrieveUserMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveUserMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveUserMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveUserMappingsCompleted(this, new DataMapping_RetrieveUserMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_AddUserMappings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataMapping_AddUserMappings(int dataSyncSystemId, RemoteDataMapping[] remoteDataMappings) {
            this.Invoke("DataMapping_AddUserMappings", new object[] {
                        dataSyncSystemId,
                        remoteDataMappings});
        }
        
        /// <remarks/>
        public void DataMapping_AddUserMappingsAsync(int dataSyncSystemId, RemoteDataMapping[] remoteDataMappings) {
            this.DataMapping_AddUserMappingsAsync(dataSyncSystemId, remoteDataMappings, null);
        }
        
        /// <remarks/>
        public void DataMapping_AddUserMappingsAsync(int dataSyncSystemId, RemoteDataMapping[] remoteDataMappings, object userState) {
            if ((this.DataMapping_AddUserMappingsOperationCompleted == null)) {
                this.DataMapping_AddUserMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_AddUserMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_AddUserMappings", new object[] {
                        dataSyncSystemId,
                        remoteDataMappings}, this.DataMapping_AddUserMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_AddUserMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_AddUserMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_AddUserMappingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveArtifactMapp" +
            "ings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveArtifactMappings(int dataSyncSystemId, int artifactTypeId) {
            object[] results = this.Invoke("DataMapping_RetrieveArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId) {
            this.DataMapping_RetrieveArtifactMappingsAsync(dataSyncSystemId, artifactTypeId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, object userState) {
            if ((this.DataMapping_RetrieveArtifactMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveArtifactMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveArtifactMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId}, this.DataMapping_RetrieveArtifactMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveArtifactMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveArtifactMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveArtifactMappingsCompleted(this, new DataMapping_RetrieveArtifactMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_AddArtifactMappings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataMapping_AddArtifactMappings(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings) {
            this.Invoke("DataMapping_AddArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        remoteDataMappings});
        }
        
        /// <remarks/>
        public void DataMapping_AddArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings) {
            this.DataMapping_AddArtifactMappingsAsync(dataSyncSystemId, artifactTypeId, remoteDataMappings, null);
        }
        
        /// <remarks/>
        public void DataMapping_AddArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings, object userState) {
            if ((this.DataMapping_AddArtifactMappingsOperationCompleted == null)) {
                this.DataMapping_AddArtifactMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_AddArtifactMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_AddArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        remoteDataMappings}, this.DataMapping_AddArtifactMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_AddArtifactMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_AddArtifactMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_AddArtifactMappingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RemoveArtifactMappin" +
            "gs", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataMapping_RemoveArtifactMappings(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings) {
            this.Invoke("DataMapping_RemoveArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        remoteDataMappings});
        }
        
        /// <remarks/>
        public void DataMapping_RemoveArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings) {
            this.DataMapping_RemoveArtifactMappingsAsync(dataSyncSystemId, artifactTypeId, remoteDataMappings, null);
        }
        
        /// <remarks/>
        public void DataMapping_RemoveArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings, object userState) {
            if ((this.DataMapping_RemoveArtifactMappingsOperationCompleted == null)) {
                this.DataMapping_RemoveArtifactMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RemoveArtifactMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RemoveArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        remoteDataMappings}, this.DataMapping_RemoveArtifactMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RemoveArtifactMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RemoveArtifactMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RemoveArtifactMappingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/CustomProperty_RetrieveProjectPr" +
            "operties", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteCustomProperty[] CustomProperty_RetrieveProjectProperties(int artifactTypeId) {
            object[] results = this.Invoke("CustomProperty_RetrieveProjectProperties", new object[] {
                        artifactTypeId});
            return ((RemoteCustomProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomProperty_RetrieveProjectPropertiesAsync(int artifactTypeId) {
            this.CustomProperty_RetrieveProjectPropertiesAsync(artifactTypeId, null);
        }
        
        /// <remarks/>
        public void CustomProperty_RetrieveProjectPropertiesAsync(int artifactTypeId, object userState) {
            if ((this.CustomProperty_RetrieveProjectPropertiesOperationCompleted == null)) {
                this.CustomProperty_RetrieveProjectPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomProperty_RetrieveProjectPropertiesOperationCompleted);
            }
            this.InvokeAsync("CustomProperty_RetrieveProjectProperties", new object[] {
                        artifactTypeId}, this.CustomProperty_RetrieveProjectPropertiesOperationCompleted, userState);
        }
        
        private void OnCustomProperty_RetrieveProjectPropertiesOperationCompleted(object arg) {
            if ((this.CustomProperty_RetrieveProjectPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomProperty_RetrieveProjectPropertiesCompleted(this, new CustomProperty_RetrieveProjectPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/System_GetServerDateTime", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime System_GetServerDateTime() {
            object[] results = this.Invoke("System_GetServerDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void System_GetServerDateTimeAsync() {
            this.System_GetServerDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void System_GetServerDateTimeAsync(object userState) {
            if ((this.System_GetServerDateTimeOperationCompleted == null)) {
                this.System_GetServerDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystem_GetServerDateTimeOperationCompleted);
            }
            this.InvokeAsync("System_GetServerDateTime", new object[0], this.System_GetServerDateTimeOperationCompleted, userState);
        }
        
        private void OnSystem_GetServerDateTimeOperationCompleted(object arg) {
            if ((this.System_GetServerDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.System_GetServerDateTimeCompleted(this, new System_GetServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/System_GetWebServerUrl", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string System_GetWebServerUrl() {
            object[] results = this.Invoke("System_GetWebServerUrl", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void System_GetWebServerUrlAsync() {
            this.System_GetWebServerUrlAsync(null);
        }
        
        /// <remarks/>
        public void System_GetWebServerUrlAsync(object userState) {
            if ((this.System_GetWebServerUrlOperationCompleted == null)) {
                this.System_GetWebServerUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystem_GetWebServerUrlOperationCompleted);
            }
            this.InvokeAsync("System_GetWebServerUrl", new object[0], this.System_GetWebServerUrlOperationCompleted, userState);
        }
        
        private void OnSystem_GetWebServerUrlOperationCompleted(object arg) {
            if ((this.System_GetWebServerUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.System_GetWebServerUrlCompleted(this, new System_GetWebServerUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/System_GetProductName", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string System_GetProductName() {
            object[] results = this.Invoke("System_GetProductName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void System_GetProductNameAsync() {
            this.System_GetProductNameAsync(null);
        }
        
        /// <remarks/>
        public void System_GetProductNameAsync(object userState) {
            if ((this.System_GetProductNameOperationCompleted == null)) {
                this.System_GetProductNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystem_GetProductNameOperationCompleted);
            }
            this.InvokeAsync("System_GetProductName", new object[0], this.System_GetProductNameOperationCompleted, userState);
        }
        
        private void OnSystem_GetProductNameOperationCompleted(object arg) {
            if ((this.System_GetProductNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.System_GetProductNameCompleted(this, new System_GetProductNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Connection_Authenticate", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Connection_Authenticate(string userName, string password) {
            object[] results = this.Invoke("Connection_Authenticate", new object[] {
                        userName,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Connection_AuthenticateAsync(string userName, string password) {
            this.Connection_AuthenticateAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void Connection_AuthenticateAsync(string userName, string password, object userState) {
            if ((this.Connection_AuthenticateOperationCompleted == null)) {
                this.Connection_AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnection_AuthenticateOperationCompleted);
            }
            this.InvokeAsync("Connection_Authenticate", new object[] {
                        userName,
                        password}, this.Connection_AuthenticateOperationCompleted, userState);
        }
        
        private void OnConnection_AuthenticateOperationCompleted(object arg) {
            if ((this.Connection_AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connection_AuthenticateCompleted(this, new Connection_AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Connection_Disconnect", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Connection_Disconnect() {
            this.Invoke("Connection_Disconnect", new object[0]);
        }
        
        /// <remarks/>
        public void Connection_DisconnectAsync() {
            this.Connection_DisconnectAsync(null);
        }
        
        /// <remarks/>
        public void Connection_DisconnectAsync(object userState) {
            if ((this.Connection_DisconnectOperationCompleted == null)) {
                this.Connection_DisconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnection_DisconnectOperationCompleted);
            }
            this.InvokeAsync("Connection_Disconnect", new object[0], this.Connection_DisconnectOperationCompleted, userState);
        }
        
        private void OnConnection_DisconnectOperationCompleted(object arg) {
            if ((this.Connection_DisconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connection_DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Connection_ConnectToProject", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Connection_ConnectToProject(int projectId) {
            object[] results = this.Invoke("Connection_ConnectToProject", new object[] {
                        projectId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Connection_ConnectToProjectAsync(int projectId) {
            this.Connection_ConnectToProjectAsync(projectId, null);
        }
        
        /// <remarks/>
        public void Connection_ConnectToProjectAsync(int projectId, object userState) {
            if ((this.Connection_ConnectToProjectOperationCompleted == null)) {
                this.Connection_ConnectToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnection_ConnectToProjectOperationCompleted);
            }
            this.InvokeAsync("Connection_ConnectToProject", new object[] {
                        projectId}, this.Connection_ConnectToProjectOperationCompleted, userState);
        }
        
        private void OnConnection_ConnectToProjectOperationCompleted(object arg) {
            if ((this.Connection_ConnectToProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connection_ConnectToProjectCompleted(this, new Connection_ConnectToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteProject {
        
        private System.Nullable<int> projectIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string websiteField;
        
        private System.DateTime creationDateField;
        
        private bool activeField;
        
        private int workingHoursField;
        
        private int workingDaysField;
        
        private int nonWorkingHoursField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public int WorkingHours {
            get {
                return this.workingHoursField;
            }
            set {
                this.workingHoursField = value;
            }
        }
        
        /// <remarks/>
        public int WorkingDays {
            get {
                return this.workingDaysField;
            }
            set {
                this.workingDaysField = value;
            }
        }
        
        /// <remarks/>
        public int NonWorkingHours {
            get {
                return this.nonWorkingHoursField;
            }
            set {
                this.nonWorkingHoursField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteCustomProperty {
        
        private int customPropertyIdField;
        
        private int projectIdField;
        
        private int artifactTypeIdField;
        
        private string aliasField;
        
        private System.Nullable<int> customPropertyListIdField;
        
        private string customPropertyNameField;
        
        private System.Nullable<int> customPropertyTypeIdField;
        
        private string customPropertyTypeNameField;
        
        /// <remarks/>
        public int CustomPropertyId {
            get {
                return this.customPropertyIdField;
            }
            set {
                this.customPropertyIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int ArtifactTypeId {
            get {
                return this.artifactTypeIdField;
            }
            set {
                this.artifactTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomPropertyListId {
            get {
                return this.customPropertyListIdField;
            }
            set {
                this.customPropertyListIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomPropertyName {
            get {
                return this.customPropertyNameField;
            }
            set {
                this.customPropertyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomPropertyTypeId {
            get {
                return this.customPropertyTypeIdField;
            }
            set {
                this.customPropertyTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomPropertyTypeName {
            get {
                return this.customPropertyTypeNameField;
            }
            set {
                this.customPropertyTypeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteDataMapping {
        
        private System.Nullable<int> projectIdField;
        
        private int internalIdField;
        
        private string externalKeyField;
        
        private bool primaryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int InternalId {
            get {
                return this.internalIdField;
            }
            set {
                this.internalIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalKey {
            get {
                return this.externalKeyField;
            }
            set {
                this.externalKeyField = value;
            }
        }
        
        /// <remarks/>
        public bool Primary {
            get {
                return this.primaryField;
            }
            set {
                this.primaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteIncidentResolution {
        
        private System.Nullable<int> incidentResolutionIdField;
        
        private int incidentIdField;
        
        private int creatorIdField;
        
        private string resolutionField;
        
        private System.DateTime creationDateField;
        
        private string creatorNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IncidentResolutionId {
            get {
                return this.incidentResolutionIdField;
            }
            set {
                this.incidentResolutionIdField = value;
            }
        }
        
        /// <remarks/>
        public int IncidentId {
            get {
                return this.incidentIdField;
            }
            set {
                this.incidentIdField = value;
            }
        }
        
        /// <remarks/>
        public int CreatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        public string Resolution {
            get {
                return this.resolutionField;
            }
            set {
                this.resolutionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreatorName {
            get {
                return this.creatorNameField;
            }
            set {
                this.creatorNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteRelease))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteIncident))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteArtifact {
        
        private string text01Field;
        
        private string text02Field;
        
        private string text03Field;
        
        private string text04Field;
        
        private string text05Field;
        
        private string text06Field;
        
        private string text07Field;
        
        private string text08Field;
        
        private string text09Field;
        
        private string text10Field;
        
        private System.Nullable<int> list01Field;
        
        private System.Nullable<int> list02Field;
        
        private System.Nullable<int> list03Field;
        
        private System.Nullable<int> list04Field;
        
        private System.Nullable<int> list05Field;
        
        private System.Nullable<int> list06Field;
        
        private System.Nullable<int> list07Field;
        
        private System.Nullable<int> list08Field;
        
        private System.Nullable<int> list09Field;
        
        private System.Nullable<int> list10Field;
        
        /// <remarks/>
        public string Text01 {
            get {
                return this.text01Field;
            }
            set {
                this.text01Field = value;
            }
        }
        
        /// <remarks/>
        public string Text02 {
            get {
                return this.text02Field;
            }
            set {
                this.text02Field = value;
            }
        }
        
        /// <remarks/>
        public string Text03 {
            get {
                return this.text03Field;
            }
            set {
                this.text03Field = value;
            }
        }
        
        /// <remarks/>
        public string Text04 {
            get {
                return this.text04Field;
            }
            set {
                this.text04Field = value;
            }
        }
        
        /// <remarks/>
        public string Text05 {
            get {
                return this.text05Field;
            }
            set {
                this.text05Field = value;
            }
        }
        
        /// <remarks/>
        public string Text06 {
            get {
                return this.text06Field;
            }
            set {
                this.text06Field = value;
            }
        }
        
        /// <remarks/>
        public string Text07 {
            get {
                return this.text07Field;
            }
            set {
                this.text07Field = value;
            }
        }
        
        /// <remarks/>
        public string Text08 {
            get {
                return this.text08Field;
            }
            set {
                this.text08Field = value;
            }
        }
        
        /// <remarks/>
        public string Text09 {
            get {
                return this.text09Field;
            }
            set {
                this.text09Field = value;
            }
        }
        
        /// <remarks/>
        public string Text10 {
            get {
                return this.text10Field;
            }
            set {
                this.text10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List01 {
            get {
                return this.list01Field;
            }
            set {
                this.list01Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List02 {
            get {
                return this.list02Field;
            }
            set {
                this.list02Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List03 {
            get {
                return this.list03Field;
            }
            set {
                this.list03Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List04 {
            get {
                return this.list04Field;
            }
            set {
                this.list04Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List05 {
            get {
                return this.list05Field;
            }
            set {
                this.list05Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List06 {
            get {
                return this.list06Field;
            }
            set {
                this.list06Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List07 {
            get {
                return this.list07Field;
            }
            set {
                this.list07Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List08 {
            get {
                return this.list08Field;
            }
            set {
                this.list08Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List09 {
            get {
                return this.list09Field;
            }
            set {
                this.list09Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List10 {
            get {
                return this.list10Field;
            }
            set {
                this.list10Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTask : RemoteArtifact {
        
        private System.Nullable<int> taskIdField;
        
        private int taskStatusIdField;
        
        private int projectIdField;
        
        private System.Nullable<int> requirementIdField;
        
        private System.Nullable<int> releaseIdField;
        
        private System.Nullable<int> ownerIdField;
        
        private System.Nullable<int> taskPriorityIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime lastUpdateDateField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private int completionPercentField;
        
        private System.Nullable<int> estimatedEffortField;
        
        private System.Nullable<int> actualEffortField;
        
        private string taskStatusNameField;
        
        private string ownerNameField;
        
        private string taskPriorityNameField;
        
        private string projectNameField;
        
        private string releaseVersionNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public int TaskStatusId {
            get {
                return this.taskStatusIdField;
            }
            set {
                this.taskStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RequirementId {
            get {
                return this.requirementIdField;
            }
            set {
                this.requirementIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReleaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskPriorityId {
            get {
                return this.taskPriorityIdField;
            }
            set {
                this.taskPriorityIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int CompletionPercent {
            get {
                return this.completionPercentField;
            }
            set {
                this.completionPercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EstimatedEffort {
            get {
                return this.estimatedEffortField;
            }
            set {
                this.estimatedEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ActualEffort {
            get {
                return this.actualEffortField;
            }
            set {
                this.actualEffortField = value;
            }
        }
        
        /// <remarks/>
        public string TaskStatusName {
            get {
                return this.taskStatusNameField;
            }
            set {
                this.taskStatusNameField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerName {
            get {
                return this.ownerNameField;
            }
            set {
                this.ownerNameField = value;
            }
        }
        
        /// <remarks/>
        public string TaskPriorityName {
            get {
                return this.taskPriorityNameField;
            }
            set {
                this.taskPriorityNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReleaseVersionNumber {
            get {
                return this.releaseVersionNumberField;
            }
            set {
                this.releaseVersionNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteRelease : RemoteArtifact {
        
        private System.Nullable<int> releaseIdField;
        
        private int creatorIdField;
        
        private int projectIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string versionNumberField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime lastUpdateDateField;
        
        private bool summaryField;
        
        private bool activeField;
        
        private bool iterationField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private int resourceCountField;
        
        private int daysNonWorkingField;
        
        private int plannedEffortField;
        
        private int availableEffortField;
        
        private System.Nullable<int> taskEstimatedEffortField;
        
        private System.Nullable<int> taskActualEffortField;
        
        private int taskCountField;
        
        private string creatorNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReleaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        public int CreatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string VersionNumber {
            get {
                return this.versionNumberField;
            }
            set {
                this.versionNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool Iteration {
            get {
                return this.iterationField;
            }
            set {
                this.iterationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int ResourceCount {
            get {
                return this.resourceCountField;
            }
            set {
                this.resourceCountField = value;
            }
        }
        
        /// <remarks/>
        public int DaysNonWorking {
            get {
                return this.daysNonWorkingField;
            }
            set {
                this.daysNonWorkingField = value;
            }
        }
        
        /// <remarks/>
        public int PlannedEffort {
            get {
                return this.plannedEffortField;
            }
            set {
                this.plannedEffortField = value;
            }
        }
        
        /// <remarks/>
        public int AvailableEffort {
            get {
                return this.availableEffortField;
            }
            set {
                this.availableEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskEstimatedEffort {
            get {
                return this.taskEstimatedEffortField;
            }
            set {
                this.taskEstimatedEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskActualEffort {
            get {
                return this.taskActualEffortField;
            }
            set {
                this.taskActualEffortField = value;
            }
        }
        
        /// <remarks/>
        public int TaskCount {
            get {
                return this.taskCountField;
            }
            set {
                this.taskCountField = value;
            }
        }
        
        /// <remarks/>
        public string CreatorName {
            get {
                return this.creatorNameField;
            }
            set {
                this.creatorNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteIncident : RemoteArtifact {
        
        private System.Nullable<int> incidentIdField;
        
        private int projectIdField;
        
        private System.Nullable<int> priorityIdField;
        
        private System.Nullable<int> severityIdField;
        
        private int incidentStatusIdField;
        
        private int incidentTypeIdField;
        
        private int openerIdField;
        
        private System.Nullable<int> ownerIdField;
        
        private System.Nullable<int> testRunStepIdField;
        
        private System.Nullable<int> detectedReleaseIdField;
        
        private System.Nullable<int> resolvedReleaseIdField;
        
        private System.Nullable<int> verifiedReleaseIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime creationDateField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> closedDateField;
        
        private int completionPercentField;
        
        private System.Nullable<int> estimatedEffortField;
        
        private System.Nullable<int> actualEffortField;
        
        private System.DateTime lastUpdateDateField;
        
        private string priorityNameField;
        
        private string severityNameField;
        
        private string incidentStatusNameField;
        
        private string incidentTypeNameField;
        
        private string openerNameField;
        
        private string ownerNameField;
        
        private string projectNameField;
        
        private string detectedReleaseVersionNumberField;
        
        private string resolvedReleaseVersionNumberField;
        
        private string verifiedReleaseVersionNumberField;
        
        private System.Nullable<bool> incidentStatusOpenStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IncidentId {
            get {
                return this.incidentIdField;
            }
            set {
                this.incidentIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PriorityId {
            get {
                return this.priorityIdField;
            }
            set {
                this.priorityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SeverityId {
            get {
                return this.severityIdField;
            }
            set {
                this.severityIdField = value;
            }
        }
        
        /// <remarks/>
        public int IncidentStatusId {
            get {
                return this.incidentStatusIdField;
            }
            set {
                this.incidentStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public int IncidentTypeId {
            get {
                return this.incidentTypeIdField;
            }
            set {
                this.incidentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int OpenerId {
            get {
                return this.openerIdField;
            }
            set {
                this.openerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestRunStepId {
            get {
                return this.testRunStepIdField;
            }
            set {
                this.testRunStepIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DetectedReleaseId {
            get {
                return this.detectedReleaseIdField;
            }
            set {
                this.detectedReleaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ResolvedReleaseId {
            get {
                return this.resolvedReleaseIdField;
            }
            set {
                this.resolvedReleaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VerifiedReleaseId {
            get {
                return this.verifiedReleaseIdField;
            }
            set {
                this.verifiedReleaseIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.closedDateField;
            }
            set {
                this.closedDateField = value;
            }
        }
        
        /// <remarks/>
        public int CompletionPercent {
            get {
                return this.completionPercentField;
            }
            set {
                this.completionPercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EstimatedEffort {
            get {
                return this.estimatedEffortField;
            }
            set {
                this.estimatedEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ActualEffort {
            get {
                return this.actualEffortField;
            }
            set {
                this.actualEffortField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        public string PriorityName {
            get {
                return this.priorityNameField;
            }
            set {
                this.priorityNameField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityName {
            get {
                return this.severityNameField;
            }
            set {
                this.severityNameField = value;
            }
        }
        
        /// <remarks/>
        public string IncidentStatusName {
            get {
                return this.incidentStatusNameField;
            }
            set {
                this.incidentStatusNameField = value;
            }
        }
        
        /// <remarks/>
        public string IncidentTypeName {
            get {
                return this.incidentTypeNameField;
            }
            set {
                this.incidentTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string OpenerName {
            get {
                return this.openerNameField;
            }
            set {
                this.openerNameField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerName {
            get {
                return this.ownerNameField;
            }
            set {
                this.ownerNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public string DetectedReleaseVersionNumber {
            get {
                return this.detectedReleaseVersionNumberField;
            }
            set {
                this.detectedReleaseVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ResolvedReleaseVersionNumber {
            get {
                return this.resolvedReleaseVersionNumberField;
            }
            set {
                this.resolvedReleaseVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string VerifiedReleaseVersionNumber {
            get {
                return this.verifiedReleaseVersionNumberField;
            }
            set {
                this.verifiedReleaseVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IncidentStatusOpenStatus {
            get {
                return this.incidentStatusOpenStatusField;
            }
            set {
                this.incidentStatusOpenStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Project_RetrieveCompletedEventHandler(object sender, Project_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Project_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Project_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteProject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteProject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveNewCompletedEventHandler(object sender, Incident_RetrieveNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveResolutionsCompletedEventHandler(object sender, Incident_RetrieveResolutionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveResolutionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveResolutionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentResolution[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentResolution[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_AddResolutionsCompletedEventHandler(object sender, Incident_AddResolutionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_AddResolutionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_AddResolutionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentResolution[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentResolution[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveByIdCompletedEventHandler(object sender, Incident_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncident Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncident)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_CreateCompletedEventHandler(object sender, Incident_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncident Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncident)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_RetrieveCompletedEventHandler(object sender, Release_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Release_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRelease[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRelease[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_RetrieveByIdCompletedEventHandler(object sender, Release_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Release_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRelease Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRelease)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_CreateCompletedEventHandler(object sender, Release_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Release_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRelease Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRelease)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_RetrieveNewCompletedEventHandler(object sender, Task_RetrieveNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_RetrieveNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_RetrieveNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTask[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTask[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_RetrieveByIdCompletedEventHandler(object sender, Task_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTask Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTask)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_CreateCompletedEventHandler(object sender, Task_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTask Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTask)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveFieldValueMappingsCompletedEventHandler(object sender, DataMapping_RetrieveFieldValueMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveFieldValueMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveFieldValueMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveCustomPropertyMappingCompletedEventHandler(object sender, DataMapping_RetrieveCustomPropertyMappingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveCustomPropertyMappingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveCustomPropertyMappingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventHandler(object sender, DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveProjectMappingsCompletedEventHandler(object sender, DataMapping_RetrieveProjectMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveProjectMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveProjectMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveUserMappingsCompletedEventHandler(object sender, DataMapping_RetrieveUserMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveUserMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveUserMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_AddUserMappingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveArtifactMappingsCompletedEventHandler(object sender, DataMapping_RetrieveArtifactMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveArtifactMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveArtifactMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_AddArtifactMappingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RemoveArtifactMappingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CustomProperty_RetrieveProjectPropertiesCompletedEventHandler(object sender, CustomProperty_RetrieveProjectPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomProperty_RetrieveProjectPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomProperty_RetrieveProjectPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteCustomProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteCustomProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void System_GetServerDateTimeCompletedEventHandler(object sender, System_GetServerDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class System_GetServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal System_GetServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void System_GetWebServerUrlCompletedEventHandler(object sender, System_GetWebServerUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class System_GetWebServerUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal System_GetWebServerUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void System_GetProductNameCompletedEventHandler(object sender, System_GetProductNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class System_GetProductNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal System_GetProductNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connection_AuthenticateCompletedEventHandler(object sender, Connection_AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Connection_AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Connection_AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connection_DisconnectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connection_ConnectToProjectCompletedEventHandler(object sender, Connection_ConnectToProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Connection_ConnectToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Connection_ConnectToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591